# scripts/test_strategy_team.py
"""
Integration test for the Strategy Team pipeline loop.
- Sets up a fake session state with mock insights
- Runs the strategy loop
- Asserts that hypotheses are generated and saved
"""
import sys
import os
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.utils.run_utils import init_run
from src.utils.session_state import SessionState, Insight
from src.orchestrator import run_strategy_loop


def make_mock_insights():
    # Minimal valid Insight objects; adjust fields as needed for your schema
    return [
        Insight(
            title="Users who read more than 10 books per year have higher average ratings.",
            finding="Frequent readers may be more positive in their ratings.",
            rationale="Segmentation hypothesis.",
            tables_used=["users", "ratings"],
            columns_used=[["users", "user_id"], ["ratings", "rating"]],
            relationships_used=[]
        ),
        Insight(
            title="Books with multiple authors receive higher ratings.",
            finding="Collaboration may improve book quality.",
            rationale="Author collaboration effect.",
            tables_used=["books", "ratings"],
            columns_used=[["books", "book_id"], ["ratings", "rating"]],
            relationships_used=[]
        )
    ]

def main():
    init_run()
    session_state = SessionState()
    session_state.insights = make_mock_insights()
    print("[TEST] Running strategy loop with mock insights...")
    result = run_strategy_loop(session_state)
    print("[TEST] Strategy loop result:", result)
    # Check hypotheses were generated
    final_hypos = getattr(session_state, "hypotheses", [])
    print(f"[TEST] Hypotheses generated: {len(final_hypos)}")
    for hypo in final_hypos:
        print(hypo)
    assert len(final_hypos) > 0, "No hypotheses were generated by the strategy loop!"
    for hypo in final_hypos:
        assert getattr(hypo, "summary", None), "Hypothesis missing summary"
        assert getattr(hypo, "rationale", None), "Hypothesis missing rationale"
        assert hypo.rationale.strip(), "Hypothesis rationale is empty!"
    print("[TEST] Strategy team integration test PASSED.")

if __name__ == "__main__":
    main()
